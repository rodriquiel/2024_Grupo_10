<?xml version="1.0" encoding="UTF-8"?><testrun name="TestSuite" project="tp_final_g10" tests="217" started="217" failures="55" errors="0" ignored="0">
  <testsuite name="testsuite.TestSuite" time="87.575">
    <testsuite name="pruebaGUI.GUIEnabledDisabledLogRegTest" time="12.659">
      <testcase name="testLoginSoloPass" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="0.788"/>
      <testcase name="testRegistroSoloConfirmarPass" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="0.561"/>
      <testcase name="testLoginSoloNombre" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="0.427"/>
      <testcase name="testRegistroSoloPass" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="0.544"/>
      <testcase name="testRegistroSinPass" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="1.544"/>
      <testcase name="testRegistroBtnCancelar" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="0.218"/>
      <testcase name="testRegistroLleno" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="1.849"/>
      <testcase name="testRegistroVacio" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="0.219"/>
      <testcase name="testRegistroSoloNombre" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="0.888"/>
      <testcase name="testRegistroSinNombre" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="1.158"/>
      <testcase name="testRegistroSinConfirma" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="1.542"/>
      <testcase name="testLoginCompleto" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="0.735"/>
      <testcase name="testRegistroSinUsuario" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="1.527"/>
      <testcase name="testRegistroSoloUsuario" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="0.537"/>
      <testcase name="testLoginVacios" classname="pruebaGUI.GUIEnabledDisabledLogRegTest" time="0.121"/>
    </testsuite>
    <testsuite name="pruebaGUI.GUIEnabledDisabledAdminTest" time="33.213">
      <testcase name="testAgregarChoferSoloAnio" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.373"/>
      <testcase name="testAgregarChoferCompletoInvalidoPerm1" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="2.593"/>
      <testcase name="testAgregarChoferCompletoInvalidoPerm2" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="2.564"/>
      <testcase name="testAgregarChoferCompletoValidoPerm" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="2.569"/>
      <testcase name="testAgregarChoferCompletoValidoTemp" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="2.126"/>
      <testcase name="testAgregarCombiCompletoValido" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.657"/>
      <testcase name="testAgregarCombiSoloCantidad" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.215"/>
      <testcase name="testAgregarCombiCompletoInvalido" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.702"/>
      <testcase name="testAgregarAutoCompletoValido" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.631"/>
      <testcase name="testAgregarAutoSoloCantidad" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.199"/>
      <testcase name="testAgregarAutoSoloPatente" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.524"/>
      <testcase name="testAgregarAutoCompletoInvalido" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.654"/>
      <testcase name="testAgregarCombiSoloPatente" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.541"/>
      <testcase name="testAgregarChoferSoloDNI" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.55"/>
      <testcase name="testAgregarChoferSoloNombre" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.421"/>
      <testcase name="testAgregarChoferSoloCantidadHijos" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.109"/>
      <testcase name="testVentanaAdminVacia" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="0.994"/>
      <testcase name="testAgregarChoferCompletoInvalidoTemp" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.651"/>
      <testcase name="testAgregarMotoValido" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.543"/>
      <testcase name="testAgregarMotoInvalido" classname="pruebaGUI.GUIEnabledDisabledAdminTest" time="1.596">
        <failure>java.lang.AssertionError: El boton de agregar vehiculo deberia estar deshabilitado&#13;
</failure>
      </testcase>
    </testsuite>
    <testsuite name="pruebaGUI.GUIEnabledDisabledClienteTest" time="6.497">
      <testcase name="testNuevoPedidoSoloKm" classname="pruebaGUI.GUIEnabledDisabledClienteTest" time="1.03"/>
      <testcase name="testNuevoPedidoCompletoPaxInvalido" classname="pruebaGUI.GUIEnabledDisabledClienteTest" time="1.157"/>
      <testcase name="testNuevoPedidoSoloPasajeros" classname="pruebaGUI.GUIEnabledDisabledClienteTest" time="1.012"/>
      <testcase name="testNuevoPedidoCompletoValido" classname="pruebaGUI.GUIEnabledDisabledClienteTest" time="1.187"/>
      <testcase name="testVentanaClienteVacia" classname="pruebaGUI.GUIEnabledDisabledClienteTest" time="0.908"/>
      <testcase name="testNuevoPedidoCompletoKmInvalido" classname="pruebaGUI.GUIEnabledDisabledClienteTest" time="1.203"/>
    </testsuite>
    <testsuite name="pruebaGUI.GUILogRegConDatosTest" time="5.443">
      <testcase name="testLogUsuarioDesconocidoConDatos" classname="pruebaGUI.GUILogRegConDatosTest" time="0.935"/>
      <testcase name="testPassErroneo" classname="pruebaGUI.GUILogRegConDatosTest" time="0.771"/>
      <testcase name="testLogOkAdmin" classname="pruebaGUI.GUILogRegConDatosTest" time="0.966"/>
      <testcase name="testLogOkCliente" classname="pruebaGUI.GUILogRegConDatosTest" time="0.811"/>
      <testcase name="testUsuarioRepetido" classname="pruebaGUI.GUILogRegConDatosTest" time="1.96">
        <failure>java.lang.AssertionError: Deberia decir: Usuario repetido expected:&lt;Usuario repetido&gt; but was:&lt;null&gt;&#13;
</failure>
      </testcase>
    </testsuite>
    <testsuite name="pruebaGUI.GUILogRegVacioTest" time="4.721">
      <testcase name="testPassNoCoincide" classname="pruebaGUI.GUILogRegVacioTest" time="1.932"/>
      <testcase name="testRegistroExitoso" classname="pruebaGUI.GUILogRegVacioTest" time="1.956"/>
      <testcase name="testUsuarioDesconocido" classname="pruebaGUI.GUILogRegVacioTest" time="0.833">
        <failure>java.lang.AssertionError: Deberia decir: Usuario inexistente expected:&lt;Usuario inexistente&gt; but was:&lt;null&gt;&#13;
</failure>
      </testcase>
    </testsuite>
    <testsuite name="pruebaGUI.GUIAdminConDatosTest" time="6.741">
      <testcase name="testCrearViajeInvalido" classname="pruebaGUI.GUIAdminConDatosTest" time="1.33"/>
      <testcase name="testCrearViajeValido" classname="pruebaGUI.GUIAdminConDatosTest" time="1.343"/>
      <testcase name="testSueldosAPagar" classname="pruebaGUI.GUIAdminConDatosTest" time="0.981">
        <failure>java.lang.AssertionError: expected:&lt;1170000.0&gt; but was:&lt;1006200.0&gt;&#13;
</failure>
      </testcase>
      <testcase name="testGestionChoferyViajes" classname="pruebaGUI.GUIAdminConDatosTest" time="2.09"/>
      <testcase name="testListadoClientes" classname="pruebaGUI.GUIAdminConDatosTest" time="0.996"/>
    </testsuite>
    <testsuite name="pruebaGUI.GUIAdminVacioTest" time="7.506">
      <testcase name="testListadosVacios" classname="pruebaGUI.GUIAdminVacioTest" time="0.98">
        <failure>java.lang.AssertionError: La cantidad de elementos de la lista de choferes libres deberia ser 0 expected:&lt;4&gt; but was:&lt;0&gt;&#13;
</failure>
      </testcase>
      <testcase name="testSueldosAPagarSinChoferes" classname="pruebaGUI.GUIAdminVacioTest" time="0.988"/>
      <testcase name="testInfoChoferSinChoferes" classname="pruebaGUI.GUIAdminVacioTest" time="0.996"/>
      <testcase name="testAgregarVehiculo" classname="pruebaGUI.GUIAdminVacioTest" time="1.805"/>
      <testcase name="testAgregarChoferValido" classname="pruebaGUI.GUIAdminVacioTest" time="2.734"/>
    </testsuite>
    <testsuite name="pruebaGUI.GUIClienteConDatosTest" time="1.157">
      <testcase name="testCalificarViaje" classname="pruebaGUI.GUIClienteConDatosTest" time="1.157"/>
    </testsuite>
    <testsuite name="pruebaGUI.GUIClienteVacioTest" time="3.875">
      <testcase name="generarPedidoConVehiculoNoCumple" classname="pruebaGUI.GUIClienteVacioTest" time="1.337"/>
      <testcase name="generarPedidoConVehiculoCumple" classname="pruebaGUI.GUIClienteVacioTest" time="1.291"/>
      <testcase name="generarPedidoSinVehiculo" classname="pruebaGUI.GUIClienteVacioTest" time="1.246"/>
    </testsuite>
    <testsuite name="pruebaPersistencia.EmpresaDTOTest" time="0.002">
      <testcase name="testGetSetCliente" classname="pruebaPersistencia.EmpresaDTOTest" time="0.001"/>
      <testcase name="testGetSetPedido" classname="pruebaPersistencia.EmpresaDTOTest" time="0.0"/>
      <testcase name="testGetSetChoferes" classname="pruebaPersistencia.EmpresaDTOTest" time="0.0"/>
      <testcase name="testGetSetVehiculo" classname="pruebaPersistencia.EmpresaDTOTest" time="0.001"/>
    </testsuite>
    <testsuite name="pruebaPersistencia.PersistenciaTest" time="0.079">
      <testcase name="testCrearArchivo" classname="pruebaPersistencia.PersistenciaTest" time="0.02"/>
      <testcase name="testEmpresaClientesVacio" classname="pruebaPersistencia.PersistenciaTest" time="0.031"/>
      <testcase name="testEmpresaClientes" classname="pruebaPersistencia.PersistenciaTest" time="0.028"/>
    </testsuite>
    <testsuite name="pruebaControlador.ControladorTestMetodosBasicos" time="0.355">
      <testcase name="GetySetPersistenciaBINTest" classname="pruebaControlador.ControladorTestMetodosBasicos" time="0.073"/>
      <testcase name="GetYsetFilenameTest" classname="pruebaControlador.ControladorTestMetodosBasicos" time="0.061"/>
      <testcase name="getYsetVistaTest" classname="pruebaControlador.ControladorTestMetodosBasicos" time="0.152"/>
      <testcase name="testControlador" classname="pruebaControlador.ControladorTestMetodosBasicos" time="0.069"/>
    </testsuite>
    <testsuite name="pruebaControlador.MetodosConMensajesAMostrar" time="1.491">
      <testcase name="testLoginClienteNoExiste" classname="pruebaControlador.MetodosConMensajesAMostrar" time="0.136"/>
      <testcase name="testEscribir" classname="pruebaControlador.MetodosConMensajesAMostrar" time="0.163"/>
      <testcase name="testLogoutCliente" classname="pruebaControlador.MetodosConMensajesAMostrar" time="0.138"/>
      <testcase name="testLeerArchInexistente" classname="pruebaControlador.MetodosConMensajesAMostrar" time="0.154"/>
      <testcase name="testLoginClientePassIncorrecta" classname="pruebaControlador.MetodosConMensajesAMostrar" time="0.132"/>
      <testcase name="testLoginAdministrador" classname="pruebaControlador.MetodosConMensajesAMostrar" time="0.18"/>
      <testcase name="testLogoutAdministrador" classname="pruebaControlador.MetodosConMensajesAMostrar" time="0.134"/>
      <testcase name="testLoginCliente" classname="pruebaControlador.MetodosConMensajesAMostrar" time="0.136"/>
      <testcase name="testLoginAdministradorPassIncorrecta" classname="pruebaControlador.MetodosConMensajesAMostrar" time="0.186">
        <failure>
          <expected>Password incorrecto</expected>
          <actual>Usuario inexistente</actual>
          org.junit.ComparisonFailure: Deberia decir: Password incorrecto expected:&lt;[Password incorrecto]&gt; but was:&lt;[Usuario inexistente]&gt;&#13;
        </failure>
      </testcase>
      <testcase name="testLeerArchExistente" classname="pruebaControlador.MetodosConMensajesAMostrar" time="0.132"/>
    </testsuite>
    <testsuite name="pruebaControlador.MetodosConMensajesAMostrar2" time="1.392">
      <testcase name="testNuevoPedidoVehiculoInexistente" classname="pruebaControlador.MetodosConMensajesAMostrar2" time="0.082">
        <failure>java.lang.AssertionError: La excepcion deberia decir: Ningun vehiculo puede satisfacer el pedido expected:&lt;Ningun vehiculo puede satisfacer el pedido&gt; but was:&lt;null&gt;&#13;
</failure>
      </testcase>
      <testcase name="testRegistrarUsuarioNuevo" classname="pruebaControlador.MetodosConMensajesAMostrar2" time="0.1"/>
      <testcase name="testNuevoChoferTemporarioExistente" classname="pruebaControlador.MetodosConMensajesAMostrar2" time="0.108">
        <failure>java.lang.AssertionError: La excepcion deberia decir: Chofer Ya Registrado expected:&lt;Chofer Ya Registrado&gt; but was:&lt;null&gt;&#13;
        </failure>
      </testcase>
      <testcase name="testNuevoPedidoVehiculoNoSatisface" classname="pruebaControlador.MetodosConMensajesAMostrar2" time="0.093">
        <failure>java.lang.AssertionError: La excepcion deberia decir: Ningun vehiculo puede satisfacer el pedido expected:&lt;Ningun vehiculo puede satisfacer el pedido&gt; but was:&lt;null&gt;&#13;
</failure>
      </testcase>
      <testcase name="testCalificarPagarExitoso" classname="pruebaControlador.MetodosConMensajesAMostrar2" time="0.09"/>
      <testcase name="testNuevoPedidoClienteConViaje" classname="pruebaControlador.MetodosConMensajesAMostrar2" time="0.156">
        <failure>java.lang.AssertionError: La excepcion deberia decir: Cliente con viaje pendiente expected:&lt;Cliente con viaje pendiente&gt; but was:&lt;null&gt;&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testNuevoChoferPermanenteExitoso" classname="pruebaControlador.MetodosConMensajesAMostrar2" time="0.072"/>
      <testcase name="testCalificarPagarClienteSinViaje" classname="pruebaControlador.MetodosConMensajesAMostrar2" time="0.139"/>
      <testcase name="testRegistrarUsuarioExistente" classname="pruebaControlador.MetodosConMensajesAMostrar2" time="0.08"/>
      <testcase name="testNuevoPedidoExitoso" classname="pruebaControlador.MetodosConMensajesAMostrar2" time="0.11">
        <failure>java.lang.AssertionError: El pedido agregado es diferente al creado por el metodo 'nuevoPedido()'. expected:&lt;20&gt; but was:&lt;2&gt;&#13;
</failure>
      </testcase>
      <testcase name="testRegistrarPassYConfirmNoCoinciden" classname="pruebaControlador.MetodosConMensajesAMostrar2" time="0.117"/>
      <testcase name="testNuevoChoferTemporarioExitoso" classname="pruebaControlador.MetodosConMensajesAMostrar2" time="0.09"/>
    </testsuite>
    <testsuite name="pruebaControlador.MetodosConMensajesAMostrar3" time="2.393">
      <testcase name="testNuevoViajePedidoEsNull" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.113">
        <failure>
          <expected>Algun parametro requerido es null</expected>
          <actual>El Pedido no figura en la lista</actual>
          org.junit.ComparisonFailure: La excepcion deberia decir: Algun parametro requerido es null expected:&lt;[Algun parametro requerido es null]&gt; but was:&lt;[El Pedido no figura en la lista]&gt;&#13;
        </failure>
      </testcase>
      <testcase name="testActionPerformedCalificarPagar" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.091"/>
      <testcase name="testNuevoVehiculoAuto" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.04"/>
      <testcase name="testNuevoVehiculoMoto" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.123"/>
      <testcase name="testActionPerformedLogin" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.12"/>
      <testcase name="testNuevoViajeChoferNoDisponible" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.121">
        <failure>
          <expected>El chofer no esta disponoble</expected>
          <actual>El Pedido no figura en la lista</actual>
          org.junit.ComparisonFailure: La excepcion deberia decir: El chofer no esta disponoble expected:&lt;El [chofer no esta disponoble]&gt; but was:&lt;El [Pedido no figura en la lista]&gt;&#13;
        </failure>
      </testcase>
      <testcase name="testActionPerformedCerrarSesionAdmin" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.079"/>
      <testcase name="testActionPerformedNuevoVehiculo" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.125"/>
      <testcase name="testNuevoViajeChoferEsNull" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.107">
        <failure>
          <expected>Algun parametro requerido es null</expected>
          <actual>El Pedido no figura en la lista</actual>
          org.junit.ComparisonFailure: La excepcion deberia decir: Algun parametro requerido es null expected:&lt;[Algun parametro requerido es null]&gt; but was:&lt;[El Pedido no figura en la lista]&gt;&#13;
        </failure>
      </testcase>
      <testcase name="testActionPerformedNuevoChofer" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.077"/>
      <testcase name="testNuevoViajeVehiculoNoSatisfacePedido" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.112"/>
      <testcase name="testNuevoVehiculoExistente" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.076"/>
      <testcase name="testNuevoViajeExitoso" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.126"/>
      <testcase name="testActionPerformedNuevoPedido" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.12">
        <failure>java.lang.AssertionError: El pedido agregado es diferente al creado por el metodo 'nuevoPedido()'. expected:&lt;20&gt; but was:&lt;2&gt;&#13;
</failure>
      </testcase>
      <testcase name="testActionPerformedCerrarSesionCliente" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.095"/>
      <testcase name="testNuevoViajeVehiculoNoDisponible" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.116"/>
      <testcase name="testNuevoVehiculoCombi" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.077"/>
      <testcase name="testActionPerformedRegistro" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.09"/>
      <testcase name="testNuevoViajePedidoNoRegistrado" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.157"/>
      <testcase name="testNuevoViajeVehiculoEsNull" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.115">
        <failure>
          <expected>Algun parametro requerido es null</expected>
          <actual>El vehiculo no esta disponible</actual>
          org.junit.ComparisonFailure: La excepcion deberia decir: Algun parametro requerido es null expected:&lt;[Algun parametro requerido es null]&gt; but was:&lt;[El vehiculo no esta disponible]&gt;&#13;
        </failure>
      </testcase>
      <testcase name="testNuevoViajeClienteConViaje" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.092">
        <failure>
          <expected>Cliente con viaje pendiente</expected>
          <actual>El Pedido no figura en la lista</actual>
          org.junit.ComparisonFailure: La excepcion deberia decir: Cliente con viaje pendiente expected:&lt;[Cliente con viaje pendiente]&gt; but was:&lt;[El Pedido no figura en la lista]&gt;&#13;
        </failure>
      </testcase>
      <testcase name="testActionPerformedNuevoViaje" classname="pruebaControlador.MetodosConMensajesAMostrar3" time="0.13"/>
    </testsuite>
    <testsuite name="prueba.AdministradorTest" time="0.0">
      <testcase name="testGeiInstance" classname="prueba.AdministradorTest" time="0.0"/>
    </testsuite>
    <testsuite name="prueba.AutoTest" time="0.003">
      <testcase name="testConstructorAuto" classname="prueba.AutoTest" time="0.0"/>
      <testcase name="testGetCantidadPlazas" classname="prueba.AutoTest" time="0.001"/>
      <testcase name="testGetPatente" classname="prueba.AutoTest" time="0.001">
        <failure>
          <expected>ABC123</expected>
          <actual>La patente debe ser 'ABC123'</actual>
          org.junit.ComparisonFailure: ABC123 expected:&lt;[ABC123]&gt; but was:&lt;[La patente debe ser 'ABC123']&gt;&#13;
        </failure>
      </testcase>
      <testcase name="testGetPuntajePedido1" classname="prueba.AutoTest" time="0.0">
        <failure>java.lang.AssertionError: no tiene que tirar exepcion&#13;
</failure>
      </testcase>
      <testcase name="testGetPuntajePedido2" classname="prueba.AutoTest" time="0.001"/>
      <testcase name="testGetPuntajePedido3" classname="prueba.AutoTest" time="0.0">
        <failure>java.lang.AssertionError: no tiene que tirar exepcion&#13;
</failure>
      </testcase>
      <testcase name="testIsMascota" classname="prueba.AutoTest" time="0.0"/>
    </testsuite>
    <testsuite name="prueba.CalificacionDeChoferTest" time="0.002">
      <testcase name="TestCalificacionDeChoferE1" classname="prueba.CalificacionDeChoferTest" time="0.002"/>
      <testcase name="TestCalificacionDeChoferE2" classname="prueba.CalificacionDeChoferTest" time="0.0">
        <failure>java.lang.AssertionError: Debería haber lanzado la excepcion - SinViajesException - ya que el chofer no tiene viajes&#13;
</failure>
      </testcase>
    </testsuite>
    <testsuite name="prueba.ChoferPermanenteTest" time="0.001">
      <testcase name="testGetAnioIngreso" classname="prueba.ChoferPermanenteTest" time="0.0"/>
      <testcase name="testGetSueldoBruto" classname="prueba.ChoferPermanenteTest" time="0.0"/>
      <testcase name="testGetSueldoNeto" classname="prueba.ChoferPermanenteTest" time="0.0"/>
      <testcase name="testSetCantidadHijos" classname="prueba.ChoferPermanenteTest" time="0.001"/>
      <testcase name="testGetAntiguedad" classname="prueba.ChoferPermanenteTest" time="0.0"/>
      <testcase name="testGetCantidadHijos" classname="prueba.ChoferPermanenteTest" time="0.0"/>
    </testsuite>
    <testsuite name="prueba.ChoferTemporarioTest" time="0.002">
      <testcase name="testGetSueldoNetoyBruto" classname="prueba.ChoferTemporarioTest" time="0.001">
        <failure>java.lang.AssertionError: Use assertEquals(expected, actual, delta) to compare floating-point numbers&#13;
</failure>
      </testcase>
      <testcase name="testGetSueldoBasico" classname="prueba.ChoferTemporarioTest" time="0.0">
        <failure>java.lang.AssertionError: Use assertEquals(expected, actual, delta) to compare floating-point numbers&#13;
</failure>
      </testcase>
      <testcase name="testConstructorChofer" classname="prueba.ChoferTemporarioTest" time="0.001"/>
      <testcase name="testGetNombre" classname="prueba.ChoferTemporarioTest" time="0.0">
        <failure>
          <expected>Pedro</expected>
          <actual>El nombre debe ser Pedro</actual>
          org.junit.ComparisonFailure: Pedro expected:&lt;[]Pedro&gt; but was:&lt;[El nombre debe ser ]Pedro&gt;&#13;
        </failure>
      </testcase>
      <testcase name="testGetDni" classname="prueba.ChoferTemporarioTest" time="0.0">
        <failure>
          <expected>24532189</expected>
          <actual>El DNI debe ser 24532189</actual>
          org.junit.ComparisonFailure: 24532189 expected:&lt;[]24532189&gt; but was:&lt;[El DNI debe ser ]24532189&gt;&#13;
        </failure>
      </testcase>
    </testsuite>
    <testsuite name="prueba.CombiTest" time="0.002">
      <testcase name="testGetPuntajePedido1" classname="prueba.CombiTest" time="0.001">
        <failure>java.lang.AssertionError: expected:&lt;160.0&gt; but was:&lt;60.0&gt;&#13;
</failure>
      </testcase>
      <testcase name="testGetPuntajePedido2" classname="prueba.CombiTest" time="0.001">
        <failure>java.lang.AssertionError: EL PARAMETRO cantidadPasajeros DEBE ESTAR ENTRE 1 Y 10&#13;
</failure>
      </testcase>
      <testcase name="testGetPuntajePedido3" classname="prueba.CombiTest" time="0.0"/>
    </testsuite>
    <testsuite name="prueba.CrearViajeTest" time="0.005">
      <testcase name="TestCrearViajeE1" classname="prueba.CrearViajeTest" time="0.001"/>
      <testcase name="TestCrearViajeE2" classname="prueba.CrearViajeTest" time="0.0">
        <failure>java.lang.AssertionError: El mensaje de la excepcion esta mal expected:&lt;El Pedido no figura en la lista&gt; but was:&lt;PEDIDO_INEXISTENTE&gt;&#13;
</failure>
      </testcase>
      <testcase name="TestCrearViajeE3" classname="prueba.CrearViajeTest" time="0.001">
        <failure>java.lang.AssertionError: El mensaje de la excepcion esta mal expected:&lt;El Pedido no figura en la lista&gt; but was:&lt;CHOFER_NO_DISPONIBLE&gt;&#13;
</failure>
      </testcase>
      <testcase name="TestCrearViajeE4" classname="prueba.CrearViajeTest" time="0.001">
        <failure>java.lang.AssertionError: No deberia lanzar una excepcion diferente a - VehiculoNoDisponibleException -&#13;
</failure>
      </testcase>
      <testcase name="TestCrearViajeE5" classname="prueba.CrearViajeTest" time="0.0">
        <failure>java.lang.AssertionError: No deberia lanzar una excepcion diferente a - VehiculoNoValidoException -&#13;
</failure>
      </testcase>
      <testcase name="TestCrearViajeE6" classname="prueba.CrearViajeTest" time="0.002">
        <failure>java.lang.AssertionError: No deberia lanzar una excepcion diferente a - ClienteConViajePendienteException -&#13;
</failure>
      </testcase>
    </testsuite>
    <testsuite name="prueba.Empresa_AgregarTest" time="0.006">
      <testcase name="TestAgregarVehiculoE1" classname="prueba.Empresa_AgregarTest" time="0.0"/>
      <testcase name="TestAgregarVehiculoE2" classname="prueba.Empresa_AgregarTest" time="0.001">
        <failure>java.lang.AssertionError: El mensaje de la excepcion esta mal expected:&lt;Vehiculo ya Registrado&gt; but was:&lt;VEHICULO_YA_REGISTRADO&gt;&#13;
</failure>
      </testcase>
      <testcase name="TestAgregarPedidoE1" classname="prueba.Empresa_AgregarTest" time="0.0"/>
      <testcase name="TestAgregarPedidoE2" classname="prueba.Empresa_AgregarTest" time="0.001">
        <failure>java.lang.AssertionError: El mensaje de la excepcion esta mal expected:&lt;Ningun vehiculo puede satisfacer el pedido&gt; but was:&lt;SIN_VEHICULO_PARA_PEDIDO&gt;&#13;
</failure>
      </testcase>
      <testcase name="TestAgregarPedidoE3" classname="prueba.Empresa_AgregarTest" time="0.001">
        <failure>java.lang.AssertionError: El mensaje de la excepcion esta mal expected:&lt;EL Cliente no esta registrado&gt; but was:&lt;CLIENTE_NO_EXISTE&gt;&#13;
</failure>
      </testcase>
      <testcase name="TestAgregarPedidoE4" classname="prueba.Empresa_AgregarTest" time="0.0">
        <failure>java.lang.AssertionError: El mensaje de la excepcion esta mal expected:&lt;Cliente con viaje pendiente&gt; but was:&lt;CLIENTE_CON_PEDIDO_PENDIENTE&gt;&#13;
</failure>
      </testcase>
      <testcase name="TestAgregarPedidoE5" classname="prueba.Empresa_AgregarTest" time="0.002">
        <failure>java.lang.AssertionError: Deberia lanzar la excepcion - ClienteConViajePendienteException -&#13;
</failure>
      </testcase>
      <testcase name="TestAgregarChoferE1" classname="prueba.Empresa_AgregarTest" time="0.0"/>
      <testcase name="TestAgregarChoferE2" classname="prueba.Empresa_AgregarTest" time="0.0">
        <failure>java.lang.AssertionError: Deberia haber lanzado la excepcion - ChoferRepetidoException -&#13;
</failure>
      </testcase>
      <testcase name="TestAgregarClienteE1" classname="prueba.Empresa_AgregarTest" time="0.0"/>
      <testcase name="TestAgregarClienteE2" classname="prueba.Empresa_AgregarTest" time="0.001">
        <failure>java.lang.AssertionError: El mensaje de la excepcion esta mal expected:&lt;Usuario repetido&gt; but was:&lt;USUARIO_REPETIDO&gt;&#13;
</failure>
      </testcase>
    </testsuite>
    <testsuite name="prueba.EmpresaSinlgetonTest" time="0.0">
      <testcase name="ConstructorEmpresaTest" classname="prueba.EmpresaSinlgetonTest" time="0.0"/>
      <testcase name="SingletonTest" classname="prueba.EmpresaSinlgetonTest" time="0.0"/>
    </testsuite>
    <testsuite name="prueba.EmpresaTest" time="0.006">
      <testcase name="GetTotalSalariosTest" classname="prueba.EmpresaTest" time="0.001">
        <failure>junit.framework.AssertionFailedError: expected:&lt;450.0&gt; but was:&lt;387.0&gt;&#13;
</failure>
      </testcase>
      <testcase name="getYsetViajesInciadosTest" classname="prueba.EmpresaTest" time="0.0"/>
      <testcase name="getYsetclientesTest" classname="prueba.EmpresaTest" time="0.0"/>
      <testcase name="GetySetVehiculosDesocupadosTest" classname="prueba.EmpresaTest" time="0.0"/>
      <testcase name="GetHistorialDeViajesChoferTest" classname="prueba.EmpresaTest" time="0.0">
        <failure>java.lang.AssertionError: deberia ser igual a 1 expected:&lt;0&gt; but was:&lt;1&gt;&#13;
</failure>
      </testcase>
      <testcase name="setYgetViajesTerminadosTest" classname="prueba.EmpresaTest" time="0.0"/>
      <testcase name="VehiculosOrdenadosPorPedidosTest" classname="prueba.EmpresaTest" time="0.001">
        <failure>java.lang.AssertionError: EL PARAMETRO cliente ES NULL&#13;
</failure>
      </testcase>
      <testcase name="GetySetChoferesTest" classname="prueba.EmpresaTest" time="0.0"/>
      <testcase name="getysetChoferesDesocupadosTest" classname="prueba.EmpresaTest" time="0.0"/>
      <testcase name="GetHistorialDeViajeporClienteTest" classname="prueba.EmpresaTest" time="0.001">
        <failure>java.lang.AssertionError: deberia ser igual a 1 expected:&lt;0&gt; but was:&lt;1&gt;&#13;
</failure>
      </testcase>
      <testcase name="getySetPedidosTest" classname="prueba.EmpresaTest" time="0.0"/>
      <testcase name="getYsetVehiculosTest" classname="prueba.EmpresaTest" time="0.0"/>
      <testcase name="validarPedidoTest" classname="prueba.EmpresaTest" time="0.001"/>
      <testcase name="ValidarPedidoTest2" classname="prueba.EmpresaTest" time="0.0"/>
    </testsuite>
    <testsuite name="prueba.GetPedidoDeCliente" time="0.001">
      <testcase name="TestGetPedidoDeClienteE1" classname="prueba.GetPedidoDeCliente" time="0.0"/>
      <testcase name="TestGetPedidoDeClienteE2" classname="prueba.GetPedidoDeCliente" time="0.001"/>
    </testsuite>
    <testsuite name="prueba.GetUsuarioLogueadotest" time="0.0">
      <testcase name="TestGetUsuarioLogueadoE1" classname="prueba.GetUsuarioLogueadotest" time="0.0"/>
      <testcase name="TestGetUsuarioLogueadoE2" classname="prueba.GetUsuarioLogueadotest" time="0.0"/>
    </testsuite>
    <testsuite name="prueba.GetViajeDeClienteTest" time="0.001">
      <testcase name="TestGetViajeDeClienteE1" classname="prueba.GetViajeDeClienteTest" time="0.0"/>
      <testcase name="TestGetViajeDeClienteE2" classname="prueba.GetViajeDeClienteTest" time="0.001"/>
    </testsuite>
    <testsuite name="prueba.isAdminTest" time="0.0">
      <testcase name="TestIsAdminE1" classname="prueba.isAdminTest" time="0.0"/>
      <testcase name="TestIsAdminE2" classname="prueba.isAdminTest" time="0.0"/>
    </testsuite>
    <testsuite name="prueba.LoginTest" time="0.002">
      <testcase name="TestLoginE1" classname="prueba.LoginTest" time="0.0"/>
      <testcase name="TestLoginE2" classname="prueba.LoginTest" time="0.001">
        <failure>java.lang.AssertionError: El mensaje de la excepcion esta mal expected:&lt;Usuario inexistente&gt; but was:&lt;USUARIO_DESCONOCIDO&gt;&#13;
</failure>
      </testcase>
      <testcase name="TestLoginE3" classname="prueba.LoginTest" time="0.001">
        <failure>java.lang.AssertionError: El mensaje de la excepcion esta mal expected:&lt;Password incorrecto&gt; but was:&lt;PASS_ERRONEO&gt;&#13;
</failure>
      </testcase>
    </testsuite>
    <testsuite name="prueba.LogOutTest" time="0.0">
      <testcase name="TestLogOut" classname="prueba.LogOutTest" time="0.0"/>
    </testsuite>
    <testsuite name="prueba.MotoTest" time="0.0">
      <testcase name="testGetPuntajePedido1" classname="prueba.MotoTest" time="0.0"/>
      <testcase name="testGetPuntajePedido2" classname="prueba.MotoTest" time="0.0"/>
      <testcase name="testGetPuntajePedido3" classname="prueba.MotoTest" time="0.0"/>
      <testcase name="testGetPuntajePedido4" classname="prueba.MotoTest" time="0.0"/>
    </testsuite>
    <testsuite name="prueba.PagarYFinalizarTest" time="0.002">
      <testcase name="TestPagarYFinalizarE1" classname="prueba.PagarYFinalizarTest" time="0.001"/>
      <testcase name="TestPagarYFinalizarE2" classname="prueba.PagarYFinalizarTest" time="0.001">
        <failure>java.lang.AssertionError: El mensaje de la excepcion esta mal expected:&lt;Cliente Sin Viaje Pendiente&gt; but was:&lt;CLIENTE_SIN_VIAJE_PENDIENTE&gt;&#13;
</failure>
      </testcase>
    </testsuite>
    <testsuite name="prueba.PedidoTest" time="0.001">
      <testcase name="testGetKm" classname="prueba.PedidoTest" time="0.0"/>
      <testcase name="testCostructorPedido" classname="prueba.PedidoTest" time="0.0"/>
      <testcase name="testGetZona" classname="prueba.PedidoTest" time="0.001">
        <failure>
          <expected>ZONA_SIN_ASFALTAR</expected>
          <actual>La zona deberia ser ZONA_SIN_ASFALTAR</actual>
          org.junit.ComparisonFailure: ZONA_SIN_ASFALTAR expected:&lt;[]ZONA_SIN_ASFALTAR&gt; but was:&lt;[La zona deberia ser ]ZONA_SIN_ASFALTAR&gt;&#13;
        </failure>
      </testcase>
      <testcase name="testIsMascota" classname="prueba.PedidoTest" time="0.0"/>
      <testcase name="testGetCliente" classname="prueba.PedidoTest" time="0.0"/>
      <testcase name="testIsBaul" classname="prueba.PedidoTest" time="0.0"/>
      <testcase name="testGetCantidadPasajeros" classname="prueba.PedidoTest" time="0.0"/>
    </testsuite>
    <testsuite name="prueba.SetUsuarioLogueadoTest" time="0.001">
      <testcase name="setUsuarioLogueadoTest" classname="prueba.SetUsuarioLogueadoTest" time="0.001"/>
    </testsuite>
    <testsuite name="prueba.UsuarioTest" time="0.003">
      <testcase name="testGetNombreUsuario" classname="prueba.UsuarioTest" time="0.001">
        <failure>
          <expected>Juan95</expected>
          <actual>El nombre de usuario debe ser Juan95</actual>
          org.junit.ComparisonFailure: Juan95 expected:&lt;[]Juan95&gt; but was:&lt;[El nombre de usuario debe ser ]Juan95&gt;
        </failure>
      </testcase>
      <testcase name="testGetPass" classname="prueba.UsuarioTest" time="0.001">
        <failure>
          <expected>12345</expected>
          <actual>La contraseña debe ser 12345</actual>
          org.junit.ComparisonFailure: 12345 expected:&lt;[]12345&gt; but was:&lt;[La contraseña debe ser ]12345&gt;&#13;
        </failure>
      </testcase>
      <testcase name="testGetNombreRealCliente" classname="prueba.UsuarioTest" time="0.001">
        <failure>
          <expected>juan</expected>
          <actual>El nombre real debe ser juan</actual>
          org.junit.ComparisonFailure: juan expected:&lt;[]juan&gt; but was:&lt;[El nombre real debe ser ]juan&gt;&#13;
        </failure>
      </testcase>
      <testcase name="testConstructorUsuario" classname="prueba.UsuarioTest" time="0.0"/>
    </testsuite>
    <testsuite name="prueba.ViajeTest" time="0.004">
      <testcase name="testConstructorViaje" classname="prueba.ViajeTest" time="0.0"/>
      <testcase name="testGetVehiculo" classname="prueba.ViajeTest" time="0.0"/>
      <testcase name="testGetValorBase" classname="prueba.ViajeTest" time="0.0"/>
      <testcase name="testGetValorE1" classname="prueba.ViajeTest" time="0.001">
        <failure>java.lang.AssertionError: El valor deberia ser 1070.9 expected:&lt;1070.9&gt; but was:&lt;143800.0&gt;&#13;
</failure>
      </testcase>
      <testcase name="testGetValorE2" classname="prueba.ViajeTest" time="0.001">
        <failure>java.lang.AssertionError: El valor deberia ser 1040.9 expected:&lt;1040.9&gt; but was:&lt;63200.0&gt;&#13;
</failure>
      </testcase>
      <testcase name="testGetValorE3" classname="prueba.ViajeTest" time="0.001">
        <failure>java.lang.AssertionError: El valor deberia ser 1060.6 expected:&lt;1060.6&gt; but was:&lt;82600.0&gt;&#13;
</failure>
      </testcase>
      <testcase name="testGetValorE4" classname="prueba.ViajeTest" time="0.001">
        <failure>java.lang.AssertionError: El valor deberia ser 1080.6 expected:&lt;1080.6&gt; but was:&lt;163200.0&gt;&#13;
</failure>
      </testcase>
      <testcase name="testGetChofer" classname="prueba.ViajeTest" time="0.0"/>
      <testcase name="testGetPedido" classname="prueba.ViajeTest" time="0.0"/>
      <testcase name="testGetCalificacion" classname="prueba.ViajeTest" time="0.0"/>
      <testcase name="testFinalizarViaje" classname="prueba.ViajeTest" time="0.0"/>
    </testsuite>
  </testsuite>
</testrun>
